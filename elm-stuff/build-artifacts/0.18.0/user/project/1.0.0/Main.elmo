var _user$project$Main$data4 = '{ \"version\": 3, \"name\": { \"first\": \"Tim\", \"last\": \"Testa\"} }';
var _user$project$Main$data3 = '{ \"version\": 2, \"name\": { \"first\": \"Tim\", \"last\": \"Testa\"} }';
var _user$project$Main$data2 = '{ \"version\": 1, \"firstName\": \"Bob\", \"lastName\": \"Bombadillo\", \"age\": null }';
var _user$project$Main$data1 = '{ \"version\": 1, \"firstName\": \"Sam\", \"lastName\": \"Sample\" }';
var _user$project$Main$firstNameDecoder = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$field, 'firstName', _elm_lang$core$Json_Decode$string),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'name',
					_1: {
						ctor: '::',
						_0: 'first',
						_1: {ctor: '[]'}
					}
				},
				_elm_lang$core$Json_Decode$string),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$versionDecoder = A2(_elm_lang$core$Json_Decode$field, 'version', _elm_lang$core$Json_Decode$int);
var _user$project$Main$nullPerson = {firstName: 'Max', lastName: 'Mustermann', age: _elm_lang$core$Maybe$Nothing};
var _user$project$Main$finalDecodePerson = function (decodeResult) {
	var _p0 = decodeResult;
	if (_p0.ctor === 'Ok') {
		return _p0._0;
	} else {
		return _user$project$Main$nullPerson;
	}
};
var _user$project$Main$Person = F3(
	function (a, b, c) {
		return {firstName: a, lastName: b, age: c};
	});
var _user$project$Main$personDecoder_v1 = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'age',
	_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int),
	_elm_lang$core$Maybe$Nothing,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'lastName',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'firstName',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Person))));
var _user$project$Main$decodePerson = function (jsonData) {
	var _p1 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$personDecoder_v1, jsonData);
	if (_p1.ctor === 'Ok') {
		return _p1._0;
	} else {
		return _user$project$Main$nullPerson;
	}
};
var _user$project$Main$personDecoder_v2 = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'age',
	_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int),
	_elm_lang$core$Maybe$Nothing,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
		{
			ctor: '::',
			_0: 'name',
			_1: {
				ctor: '::',
				_0: 'last',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
			{
				ctor: '::',
				_0: 'name',
				_1: {
					ctor: '::',
					_0: 'first',
					_1: {ctor: '[]'}
				}
			},
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Person))));
var _user$project$Main$decodeVersionedPerson = function (jsonData) {
	var _p2 = A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$versionDecoder, jsonData);
	if (_p2.ctor === 'Ok') {
		var _p3 = _p2._0;
		switch (_p3) {
			case 1:
				return _user$project$Main$finalDecodePerson(
					A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$personDecoder_v1, jsonData));
			case 2:
				return _user$project$Main$finalDecodePerson(
					A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$personDecoder_v2, jsonData));
			default:
				return _user$project$Main$nullPerson;
		}
	} else {
		return _user$project$Main$nullPerson;
	}
};
var _user$project$Main$personDecoderPipeline = function () {
	var toDecoder = F4(
		function (version, firstName, lastName, age) {
			return (_elm_lang$core$Native_Utils.cmp(version, 2) > 0) ? _elm_lang$core$Json_Decode$succeed(_user$project$Main$nullPerson) : _elm_lang$core$Json_Decode$succeed(
				A3(_user$project$Main$Person, firstName, lastName, age));
		});
	return _NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$resolve(
		A4(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
			'age',
			_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int),
			_elm_lang$core$Maybe$Nothing,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
				{
					ctor: '::',
					_0: 'name',
					_1: {
						ctor: '::',
						_0: 'last',
						_1: {ctor: '[]'}
					}
				},
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$requiredAt,
					{
						ctor: '::',
						_0: 'name',
						_1: {
							ctor: '::',
							_0: 'first',
							_1: {ctor: '[]'}
						}
					},
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'version',
						_elm_lang$core$Json_Decode$int,
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(toDecoder))))));
}();
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(
		A2(
			_elm_lang$core$String$join,
			' --- ',
			{
				ctor: '::',
				_0: _elm_lang$core$Basics$toString(
					_user$project$Main$decodeVersionedPerson(_user$project$Main$data1)),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Basics$toString(
						_user$project$Main$decodeVersionedPerson(_user$project$Main$data2)),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Basics$toString(
							_user$project$Main$decodeVersionedPerson(_user$project$Main$data3)),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Basics$toString(
								A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$personDecoderPipeline, _user$project$Main$data3)),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Basics$toString(
									A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$personDecoderPipeline, _user$project$Main$data4)),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			})));
